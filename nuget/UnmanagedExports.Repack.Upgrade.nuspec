<?xml version="1.0"?>
<package xmlns="http://schemas.microsoft.com/packaging/2011/08/nuspec.xsd">
  <metadata minClientVersion="4.0">
    <id>UnmanagedExports.Repack.Upgrade</id>
    <version>1.1.0</version>
    <title>Unmanaged Exports (DllExport for .Net) - Adapted for PackageReference</title>
    <authors>Robert Giesecke, repacked by Kevin Gosse, upgraded MS Build Utility by StEn</authors>
    <owners>StEn</owners>
    <licenseUrl>http://opensource.org/licenses/mit-license.php</licenseUrl>
    <projectUrl>https://github.com/stevenengland/UnmanagedExports.Repack.Upgrade</projectUrl>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <description>Repackaging of UnmanagedExports 1.2.7 to be compatible with PackageReference and additionally upgraded the Microsoft Build Utilities to v4 from v2.
	
	A set of compile-time libraries (nothing to deploy) and a build task that enable you to export functions from managed code to native applications.
      That means, you can create plugins in a managed language like C# or F# for native applications that only have a C-Api (like Notepad++).
      The nuget package is all you need. Just mark your methods with [DllExport] and build for x86, x64 or ia64.

      Hints:
      - You have to set your platform target to either x86, ia64 or x64. AnyCPU assemblies cannot export functions.
      - The export name defaults to the method name and the calling convention to stdcall. If that's all what you want, you can just use [DllExport] without parameters.
      - You cannot put your exports in generic types or export generic methods. (The CLR wouldn't know what type parameters to use)</description>
    <summary>Adds the ability to declare unmanaged function exports.
      IOW: the exact opposite of how DllImport works.</summary>
    <language>en-US</language>
    <tags>dllexport unmanaged exports export</tags>
  </metadata>
  <files>
		<file src="build\**" target="build" />
		<file src="lib\RGiesecke.DllExport.Metadata.dll" target="lib\net452" />
        <file src="lib\RGiesecke.DllExport.Metadata.dll" target="lib\netstandard20" />
		<file src="tasks\**" target="tasks" />
	</files>
</package>